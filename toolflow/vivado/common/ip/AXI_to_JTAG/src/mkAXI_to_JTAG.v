//
// Generated by Bluespec Compiler (build e76ca21)
//
// On Fri Jul 17 10:29:08 CEST 2020
//
//
// Ports:
// Name                         I/O  size props
// s_AXI_JTAG_arready             O     1
// s_AXI_JTAG_rvalid              O     1
// s_AXI_JTAG_rid                 O    12
// s_AXI_JTAG_rdata               O    32
// s_AXI_JTAG_rresp               O     2
// s_AXI_JTAG_rlast               O     1
// s_AXI_JTAG_awready             O     1
// s_AXI_JTAG_wready              O     1
// s_AXI_JTAG_bvalid              O     1
// s_AXI_JTAG_bresp               O     2
// s_AXI_JTAG_bid                 O    12
// jtag_TCK                       O     1 reg
// jtag_TMS                       O     1 reg
// jtag_TDI                       O     1 reg
// slave_select                   O     2 reg
// ACLK                           I     1 clock
// ARESETN                        I     1 reset
// s_AXI_JTAG_arvalid             I     1
// s_AXI_JTAG_arid                I    12
// s_AXI_JTAG_araddr              I    32
// s_AXI_JTAG_arlen               I     8
// s_AXI_JTAG_arsize              I     3
// s_AXI_JTAG_arburst             I     2
// s_AXI_JTAG_arlock              I     1
// s_AXI_JTAG_arcache             I     4
// s_AXI_JTAG_arprot              I     3
// s_AXI_JTAG_arqos               I     4
// s_AXI_JTAG_arregion            I     4
// s_AXI_JTAG_rready              I     1
// s_AXI_JTAG_awvalid             I     1
// s_AXI_JTAG_awid                I    12
// s_AXI_JTAG_awaddr              I    32
// s_AXI_JTAG_awlen               I     8
// s_AXI_JTAG_awsize              I     3
// s_AXI_JTAG_awburst             I     2
// s_AXI_JTAG_awlock              I     1
// s_AXI_JTAG_awcache             I     4
// s_AXI_JTAG_awprot              I     3
// s_AXI_JTAG_awqos               I     4
// s_AXI_JTAG_awregion            I     4
// s_AXI_JTAG_wvalid              I     1
// s_AXI_JTAG_wdata               I    32
// s_AXI_JTAG_wstrb               I     4
// s_AXI_JTAG_wlast               I     1
// s_AXI_JTAG_bready              I     1
// jtag_TDO                       I     1 reg
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkAXI_to_JTAG(ACLK,
		     ARESETN,

		     s_AXI_JTAG_arvalid,

		     s_AXI_JTAG_arready,

		     s_AXI_JTAG_arid,
		     s_AXI_JTAG_araddr,
		     s_AXI_JTAG_arlen,
		     s_AXI_JTAG_arsize,
		     s_AXI_JTAG_arburst,
		     s_AXI_JTAG_arlock,
		     s_AXI_JTAG_arcache,
		     s_AXI_JTAG_arprot,
		     s_AXI_JTAG_arqos,
		     s_AXI_JTAG_arregion,

		     s_AXI_JTAG_rready,

		     s_AXI_JTAG_rvalid,

		     s_AXI_JTAG_rid,

		     s_AXI_JTAG_rdata,

		     s_AXI_JTAG_rresp,

		     s_AXI_JTAG_rlast,

		     s_AXI_JTAG_awready,

		     s_AXI_JTAG_awvalid,

		     s_AXI_JTAG_awid,
		     s_AXI_JTAG_awaddr,
		     s_AXI_JTAG_awlen,
		     s_AXI_JTAG_awsize,
		     s_AXI_JTAG_awburst,
		     s_AXI_JTAG_awlock,
		     s_AXI_JTAG_awcache,
		     s_AXI_JTAG_awprot,
		     s_AXI_JTAG_awqos,
		     s_AXI_JTAG_awregion,

		     s_AXI_JTAG_wready,

		     s_AXI_JTAG_wvalid,

		     s_AXI_JTAG_wdata,
		     s_AXI_JTAG_wstrb,
		     s_AXI_JTAG_wlast,

		     s_AXI_JTAG_bready,

		     s_AXI_JTAG_bvalid,

		     s_AXI_JTAG_bresp,

		     s_AXI_JTAG_bid,

		     jtag_TCK,

		     jtag_TMS,

		     jtag_TDI,

		     jtag_TDO,

		     slave_select);
  input  ACLK;
  input  ARESETN;

  // action method s_AXI_JTAG_s_read_fab_parvalid
  input  s_AXI_JTAG_arvalid;

  // value method s_AXI_JTAG_s_read_fab_arready
  output s_AXI_JTAG_arready;

  // action method s_AXI_JTAG_s_read_fab_parchannel
  input  [11 : 0] s_AXI_JTAG_arid;
  input  [31 : 0] s_AXI_JTAG_araddr;
  input  [7 : 0] s_AXI_JTAG_arlen;
  input  [2 : 0] s_AXI_JTAG_arsize;
  input  [1 : 0] s_AXI_JTAG_arburst;
  input  s_AXI_JTAG_arlock;
  input  [3 : 0] s_AXI_JTAG_arcache;
  input  [2 : 0] s_AXI_JTAG_arprot;
  input  [3 : 0] s_AXI_JTAG_arqos;
  input  [3 : 0] s_AXI_JTAG_arregion;

  // action method s_AXI_JTAG_s_read_fab_prready
  input  s_AXI_JTAG_rready;

  // value method s_AXI_JTAG_s_read_fab_rvalid
  output s_AXI_JTAG_rvalid;

  // value method s_AXI_JTAG_s_read_fab_rid
  output [11 : 0] s_AXI_JTAG_rid;

  // value method s_AXI_JTAG_s_read_fab_rdata
  output [31 : 0] s_AXI_JTAG_rdata;

  // value method s_AXI_JTAG_s_read_fab_rresp
  output [1 : 0] s_AXI_JTAG_rresp;

  // value method s_AXI_JTAG_s_read_fab_rlast
  output s_AXI_JTAG_rlast;

  // value method s_AXI_JTAG_s_read_fab_ruser

  // value method s_AXI_JTAG_s_write_fab_awready
  output s_AXI_JTAG_awready;

  // action method s_AXI_JTAG_s_write_fab_pawvalid
  input  s_AXI_JTAG_awvalid;

  // action method s_AXI_JTAG_s_write_fab_pawchannel
  input  [11 : 0] s_AXI_JTAG_awid;
  input  [31 : 0] s_AXI_JTAG_awaddr;
  input  [7 : 0] s_AXI_JTAG_awlen;
  input  [2 : 0] s_AXI_JTAG_awsize;
  input  [1 : 0] s_AXI_JTAG_awburst;
  input  s_AXI_JTAG_awlock;
  input  [3 : 0] s_AXI_JTAG_awcache;
  input  [2 : 0] s_AXI_JTAG_awprot;
  input  [3 : 0] s_AXI_JTAG_awqos;
  input  [3 : 0] s_AXI_JTAG_awregion;

  // value method s_AXI_JTAG_s_write_fab_wready
  output s_AXI_JTAG_wready;

  // action method s_AXI_JTAG_s_write_fab_pwvalid
  input  s_AXI_JTAG_wvalid;

  // action method s_AXI_JTAG_s_write_fab_pwchannel
  input  [31 : 0] s_AXI_JTAG_wdata;
  input  [3 : 0] s_AXI_JTAG_wstrb;
  input  s_AXI_JTAG_wlast;

  // action method s_AXI_JTAG_s_write_fab_pbready
  input  s_AXI_JTAG_bready;

  // value method s_AXI_JTAG_s_write_fab_bvalid
  output s_AXI_JTAG_bvalid;

  // value method s_AXI_JTAG_s_write_fab_bresp
  output [1 : 0] s_AXI_JTAG_bresp;

  // value method s_AXI_JTAG_s_write_fab_bid
  output [11 : 0] s_AXI_JTAG_bid;

  // value method s_AXI_JTAG_s_write_fab_buser

  // value method jtag_tck
  output jtag_TCK;

  // value method jtag_tms
  output jtag_TMS;

  // value method jtag_tdi
  output jtag_TDI;

  // action method jtag_tdo_action
  input  jtag_TDO;

  // value method slave_select
  output [1 : 0] slave_select;

  // signals for module outputs
  wire [31 : 0] s_AXI_JTAG_rdata;
  wire [11 : 0] s_AXI_JTAG_bid, s_AXI_JTAG_rid;
  wire [1 : 0] s_AXI_JTAG_bresp, s_AXI_JTAG_rresp, slave_select;
  wire jtag_TCK,
       jtag_TDI,
       jtag_TMS,
       s_AXI_JTAG_arready,
       s_AXI_JTAG_awready,
       s_AXI_JTAG_bvalid,
       s_AXI_JTAG_rlast,
       s_AXI_JTAG_rvalid,
       s_AXI_JTAG_wready;

  // inlined wires
  wire [73 : 0] axi_to_jtag_internal_s_read_in_rv$port1__read,
		axi_to_jtag_internal_s_read_in_rv$port1__write_1,
		axi_to_jtag_internal_s_read_in_rv$port2__read,
		axi_to_jtag_internal_s_write_in_addr_rv$port1__read,
		axi_to_jtag_internal_s_write_in_addr_rv$port1__write_1,
		axi_to_jtag_internal_s_write_in_addr_rv$port2__read;
  wire [72 : 0] axi_to_jtag_internal_s_read_arinpkg$wget,
		axi_to_jtag_internal_s_write_arinpkg_addr$wget;
  wire [47 : 0] axi_to_jtag_internal_s_read_out_rv$port1__read,
		axi_to_jtag_internal_s_read_out_rv$port1__write_1,
		axi_to_jtag_internal_s_read_out_rv$port2__read;
  wire [37 : 0] axi_to_jtag_internal_s_write_in_data_rv$port1__read,
		axi_to_jtag_internal_s_write_in_data_rv$port1__write_1,
		axi_to_jtag_internal_s_write_in_data_rv$port2__read;
  wire [36 : 0] axi_to_jtag_internal_s_write_arinpkg_data$wget;
  wire [14 : 0] axi_to_jtag_internal_s_write_out_rv$port1__read,
		axi_to_jtag_internal_s_write_out_rv$port1__write_1,
		axi_to_jtag_internal_s_write_out_rv$port2__read;
  wire axi_to_jtag_internal_s_read_in_rv$EN_port0__write,
       axi_to_jtag_internal_s_read_in_rv$EN_port1__write,
       axi_to_jtag_internal_s_read_out_rv$EN_port0__write,
       axi_to_jtag_internal_s_read_out_rv$EN_port1__write,
       axi_to_jtag_internal_s_write_in_addr_rv$EN_port1__write,
       axi_to_jtag_internal_s_write_in_data_rv$EN_port1__write,
       axi_to_jtag_internal_s_write_out_rv$EN_port0__write,
       axi_to_jtag_internal_s_write_out_rv$EN_port1__write;

  // register axi_to_jtag_address
  reg [31 : 0] axi_to_jtag_address;
  wire [31 : 0] axi_to_jtag_address$D_IN;
  wire axi_to_jtag_address$EN;

  // register axi_to_jtag_data
  reg [31 : 0] axi_to_jtag_data;
  wire [31 : 0] axi_to_jtag_data$D_IN;
  wire axi_to_jtag_data$EN;

  // register axi_to_jtag_internal_jtag_tap_access_dm
  reg axi_to_jtag_internal_jtag_tap_access_dm;
  wire axi_to_jtag_internal_jtag_tap_access_dm$D_IN,
       axi_to_jtag_internal_jtag_tap_access_dm$EN;

  // register axi_to_jtag_internal_jtag_tap_dm_address
  reg [6 : 0] axi_to_jtag_internal_jtag_tap_dm_address;
  wire [6 : 0] axi_to_jtag_internal_jtag_tap_dm_address$D_IN;
  wire axi_to_jtag_internal_jtag_tap_dm_address$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read
  reg [7 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read;
  wire [7 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read$D_IN;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_to_read
  reg [7 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_to_read;
  wire [7 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_to_read$D_IN;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_to_read$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state
  reg [3 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state;
  wire [3 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state$D_IN;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access
  reg axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access$D_IN,
       axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk
  reg axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk;
  reg axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$D_IN;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi
  reg axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi$D_IN,
       axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdo
  reg axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdo;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdo$D_IN,
       axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdo$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms
  reg axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms$D_IN,
       axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_trst
  reg axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_trst;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_trst$D_IN,
       axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_trst$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state
  reg [2 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state;
  reg [2 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state$D_IN;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_reset_counter
  reg [7 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_reset_counter;
  wire [7 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_reset_counter$D_IN;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_reset_counter$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready
  reg axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready$D_IN,
       axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value
  reg [63 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value;
  wire [63 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value$D_IN;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state
  reg [2 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state;
  reg [2 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$D_IN;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access
  reg axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access$D_IN,
       axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state
  reg [3 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state;
  wire [3 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$D_IN;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state
  reg [3 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state;
  wire [3 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state$D_IN;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state$EN;

  // register axi_to_jtag_internal_jtag_tap_internal_slave_select
  reg [1 : 0] axi_to_jtag_internal_jtag_tap_internal_slave_select;
  wire [1 : 0] axi_to_jtag_internal_jtag_tap_internal_slave_select$D_IN;
  wire axi_to_jtag_internal_jtag_tap_internal_slave_select$EN;

  // register axi_to_jtag_internal_jtag_tap_is_read_request
  reg axi_to_jtag_internal_jtag_tap_is_read_request;
  wire axi_to_jtag_internal_jtag_tap_is_read_request$D_IN,
       axi_to_jtag_internal_jtag_tap_is_read_request$EN;

  // register axi_to_jtag_internal_jtag_tap_read_dmi_reg
  reg axi_to_jtag_internal_jtag_tap_read_dmi_reg;
  wire axi_to_jtag_internal_jtag_tap_read_dmi_reg$D_IN,
       axi_to_jtag_internal_jtag_tap_read_dmi_reg$EN;

  // register axi_to_jtag_internal_jtag_tap_register_width
  reg [7 : 0] axi_to_jtag_internal_jtag_tap_register_width;
  wire [7 : 0] axi_to_jtag_internal_jtag_tap_register_width$D_IN;
  wire axi_to_jtag_internal_jtag_tap_register_width$EN;

  // register axi_to_jtag_internal_jtag_tap_started_read_request
  reg axi_to_jtag_internal_jtag_tap_started_read_request;
  wire axi_to_jtag_internal_jtag_tap_started_read_request$D_IN,
       axi_to_jtag_internal_jtag_tap_started_read_request$EN;

  // register axi_to_jtag_internal_jtag_tap_started_write_request
  reg axi_to_jtag_internal_jtag_tap_started_write_request;
  wire axi_to_jtag_internal_jtag_tap_started_write_request$D_IN,
       axi_to_jtag_internal_jtag_tap_started_write_request$EN;

  // register axi_to_jtag_internal_jtag_tap_write_dmi_reg
  reg axi_to_jtag_internal_jtag_tap_write_dmi_reg;
  wire axi_to_jtag_internal_jtag_tap_write_dmi_reg$D_IN,
       axi_to_jtag_internal_jtag_tap_write_dmi_reg$EN;

  // register axi_to_jtag_internal_s_read_in_rv
  reg [73 : 0] axi_to_jtag_internal_s_read_in_rv;
  wire [73 : 0] axi_to_jtag_internal_s_read_in_rv$D_IN;
  wire axi_to_jtag_internal_s_read_in_rv$EN;

  // register axi_to_jtag_internal_s_read_isRst_isInReset
  reg axi_to_jtag_internal_s_read_isRst_isInReset;
  wire axi_to_jtag_internal_s_read_isRst_isInReset$D_IN,
       axi_to_jtag_internal_s_read_isRst_isInReset$EN;

  // register axi_to_jtag_internal_s_read_out_rv
  reg [47 : 0] axi_to_jtag_internal_s_read_out_rv;
  wire [47 : 0] axi_to_jtag_internal_s_read_out_rv$D_IN;
  wire axi_to_jtag_internal_s_read_out_rv$EN;

  // register axi_to_jtag_internal_s_write_in_addr_rv
  reg [73 : 0] axi_to_jtag_internal_s_write_in_addr_rv;
  wire [73 : 0] axi_to_jtag_internal_s_write_in_addr_rv$D_IN;
  wire axi_to_jtag_internal_s_write_in_addr_rv$EN;

  // register axi_to_jtag_internal_s_write_in_data_rv
  reg [37 : 0] axi_to_jtag_internal_s_write_in_data_rv;
  wire [37 : 0] axi_to_jtag_internal_s_write_in_data_rv$D_IN;
  wire axi_to_jtag_internal_s_write_in_data_rv$EN;

  // register axi_to_jtag_internal_s_write_isRst_isInReset
  reg axi_to_jtag_internal_s_write_isRst_isInReset;
  wire axi_to_jtag_internal_s_write_isRst_isInReset$D_IN,
       axi_to_jtag_internal_s_write_isRst_isInReset$EN;

  // register axi_to_jtag_internal_s_write_out_rv
  reg [14 : 0] axi_to_jtag_internal_s_write_out_rv;
  wire [14 : 0] axi_to_jtag_internal_s_write_out_rv$D_IN;
  wire axi_to_jtag_internal_s_write_out_rv$EN;

  // register axi_to_jtag_read_id
  reg [11 : 0] axi_to_jtag_read_id;
  wire [11 : 0] axi_to_jtag_read_id$D_IN;
  wire axi_to_jtag_read_id$EN;

  // register axi_to_jtag_received_addr
  reg axi_to_jtag_received_addr;
  wire axi_to_jtag_received_addr$D_IN, axi_to_jtag_received_addr$EN;

  // register axi_to_jtag_received_data
  reg axi_to_jtag_received_data;
  wire axi_to_jtag_received_data$D_IN, axi_to_jtag_received_data$EN;

  // register axi_to_jtag_write_id
  reg [11 : 0] axi_to_jtag_write_id;
  wire [11 : 0] axi_to_jtag_write_id$D_IN;
  wire axi_to_jtag_write_id$EN;

  // ports of submodule axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req
  reg [73 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_IN;
  wire [73 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_OUT;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$CLR,
       axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$DEQ,
       axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$EMPTY_N,
       axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$ENQ,
       axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$FULL_N;

  // ports of submodule axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp
  wire [63 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$D_IN,
		axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$D_OUT;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$CLR,
       axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$DEQ,
       axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$EMPTY_N,
       axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$ENQ,
       axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$FULL_N;

  // ports of submodule axi_to_jtag_internal_jtag_tap_read_req_fifo
  wire [31 : 0] axi_to_jtag_internal_jtag_tap_read_req_fifo$D_IN,
		axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT;
  wire axi_to_jtag_internal_jtag_tap_read_req_fifo$CLR,
       axi_to_jtag_internal_jtag_tap_read_req_fifo$DEQ,
       axi_to_jtag_internal_jtag_tap_read_req_fifo$EMPTY_N,
       axi_to_jtag_internal_jtag_tap_read_req_fifo$ENQ,
       axi_to_jtag_internal_jtag_tap_read_req_fifo$FULL_N;

  // ports of submodule axi_to_jtag_internal_jtag_tap_read_rsp_fifo
  wire [63 : 0] axi_to_jtag_internal_jtag_tap_read_rsp_fifo$D_IN,
		axi_to_jtag_internal_jtag_tap_read_rsp_fifo$D_OUT;
  wire axi_to_jtag_internal_jtag_tap_read_rsp_fifo$CLR,
       axi_to_jtag_internal_jtag_tap_read_rsp_fifo$DEQ,
       axi_to_jtag_internal_jtag_tap_read_rsp_fifo$EMPTY_N,
       axi_to_jtag_internal_jtag_tap_read_rsp_fifo$ENQ,
       axi_to_jtag_internal_jtag_tap_read_rsp_fifo$FULL_N;

  // ports of submodule axi_to_jtag_internal_jtag_tap_write_req_fifo
  wire [63 : 0] axi_to_jtag_internal_jtag_tap_write_req_fifo$D_IN,
		axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT;
  wire axi_to_jtag_internal_jtag_tap_write_req_fifo$CLR,
       axi_to_jtag_internal_jtag_tap_write_req_fifo$DEQ,
       axi_to_jtag_internal_jtag_tap_write_req_fifo$EMPTY_N,
       axi_to_jtag_internal_jtag_tap_write_req_fifo$ENQ,
       axi_to_jtag_internal_jtag_tap_write_req_fifo$FULL_N;

  // ports of submodule axi_to_jtag_internal_jtag_tap_write_rsp_fifo
  wire [63 : 0] axi_to_jtag_internal_jtag_tap_write_rsp_fifo$D_IN;
  wire axi_to_jtag_internal_jtag_tap_write_rsp_fifo$CLR,
       axi_to_jtag_internal_jtag_tap_write_rsp_fifo$DEQ,
       axi_to_jtag_internal_jtag_tap_write_rsp_fifo$EMPTY_N,
       axi_to_jtag_internal_jtag_tap_write_rsp_fifo$ENQ,
       axi_to_jtag_internal_jtag_tap_write_rsp_fifo$FULL_N;

  // rule scheduling signals
  wire WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_deq_request,
       WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_enq_response,
       WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_fsm,
       WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm1,
       WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm2,
       WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm3,
       WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm4,
       WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_fsm,
       WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_read_data_register,
       WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_jtag_response,
       WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_read_req,
       WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request,
       WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_write_data_register,
       WILL_FIRE_RL_axi_to_jtag_send_jtag_write_request;

  // inputs to muxes for submodule ports
  reg [73 : 0] MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_1,
	       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_2;
  reg [63 : 0] MUX_axi_to_jtag_internal_jtag_tap_read_rsp_fifo$enq_1__VAL_2;
  reg [7 : 0] MUX_axi_to_jtag_internal_jtag_tap_register_width$write_1__VAL_2;
  reg [3 : 0] MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$write_1__VAL_2;
  wire [73 : 0] MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_3,
		MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_4;
  wire [63 : 0] MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value$write_1__VAL_1,
		MUX_axi_to_jtag_internal_jtag_tap_read_rsp_fifo$enq_1__VAL_1;
  wire [7 : 0] MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read$write_1__VAL_1,
	       MUX_axi_to_jtag_internal_jtag_tap_register_width$write_1__VAL_1;
  wire [3 : 0] MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state$write_1__VAL_1,
	       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state$write_1__VAL_2;
  wire [2 : 0] MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$write_1__VAL_2;
  wire MUX_axi_to_jtag_internal_jtag_tap_access_dm$write_1__SEL_1,
       MUX_axi_to_jtag_internal_jtag_tap_access_dm$write_1__SEL_3,
       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read$write_1__SEL_1,
       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$write_1__SEL_1,
       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$write_1__VAL_1,
       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi$write_1__SEL_1,
       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi$write_1__VAL_2,
       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms$write_1__SEL_1,
       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms$write_1__SEL_2,
       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms$write_1__VAL_2,
       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__SEL_1,
       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__SEL_2,
       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready$write_1__SEL_1,
       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value$write_1__SEL_1,
       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$write_1__SEL_1,
       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access$write_1__SEL_1,
       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$write_1__SEL_1,
       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state$write_1__SEL_2,
       MUX_axi_to_jtag_internal_jtag_tap_read_dmi_reg$write_1__SEL_2,
       MUX_axi_to_jtag_internal_jtag_tap_read_rsp_fifo$enq_1__SEL_1,
       MUX_axi_to_jtag_internal_jtag_tap_register_width$write_1__SEL_1,
       MUX_axi_to_jtag_internal_jtag_tap_started_read_request$write_1__SEL_1,
       MUX_axi_to_jtag_internal_jtag_tap_started_write_request$write_1__SEL_1,
       MUX_axi_to_jtag_internal_jtag_tap_write_rsp_fifo$enq_1__SEL_1,
       MUX_axi_to_jtag_received_addr$write_1__SEL_2,
       MUX_axi_to_jtag_received_data$write_1__SEL_2;

  // remaining internal signals
  reg [3 : 0] CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q3,
	      CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q8,
	      CASE_axi_to_jtag_internal_s_read_arinpkgwget__ETC__q6,
	      CASE_axi_to_jtag_internal_s_write_arinpkg_addr_ETC__q7,
	      CASE_s_AXI_JTAG_arcache_0_s_AXI_JTAG_arcache_1_ETC__q1,
	      CASE_s_AXI_JTAG_awcache_0_s_AXI_JTAG_awcache_1_ETC__q2,
	      IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340;
  reg CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q5;
  wire [63 : 0] axi_to_jtag_internal_jtag_tap_internal_jtag_ma_ETC__q4,
		response_data__h10017,
		response_data__h10180,
		x__h5382,
		x_data__h10263,
		x_data__h11067,
		x_data__h11213,
		y__h5432,
		y_avValue_data__h11333;
  wire [14 : 0] IF_s_AXI_JTAG_arcache_EQ_0_18_OR_s_AXI_JTAG_ar_ETC___d533,
		IF_s_AXI_JTAG_awcache_EQ_0_46_OR_s_AXI_JTAG_aw_ETC___d561;
  wire [7 : 0] x__h5409;
  wire [3 : 0] IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d321;
  wire axi_to_jtag_internal_jtag_tap_internal_jtag_ma_ETC___d143,
       axi_to_jtag_internal_jtag_tap_internal_jtag_ma_ETC___d313;

  // value method s_AXI_JTAG_s_read_fab_arready
  assign s_AXI_JTAG_arready =
	     !axi_to_jtag_internal_s_read_isRst_isInReset &&
	     !axi_to_jtag_internal_s_read_in_rv$port1__read[73] ;

  // value method s_AXI_JTAG_s_read_fab_rvalid
  assign s_AXI_JTAG_rvalid =
	     !axi_to_jtag_internal_s_read_isRst_isInReset &&
	     axi_to_jtag_internal_s_read_out_rv[47] ;

  // value method s_AXI_JTAG_s_read_fab_rid
  assign s_AXI_JTAG_rid =
	     axi_to_jtag_internal_s_read_out_rv[47] ?
	       axi_to_jtag_internal_s_read_out_rv[46:35] :
	       12'd0 ;

  // value method s_AXI_JTAG_s_read_fab_rdata
  assign s_AXI_JTAG_rdata =
	     axi_to_jtag_internal_s_read_out_rv[47] ?
	       axi_to_jtag_internal_s_read_out_rv[34:3] :
	       32'd0 ;

  // value method s_AXI_JTAG_s_read_fab_rresp
  assign s_AXI_JTAG_rresp =
	     axi_to_jtag_internal_s_read_out_rv[47] ?
	       axi_to_jtag_internal_s_read_out_rv[2:1] :
	       2'd0 ;

  // value method s_AXI_JTAG_s_read_fab_rlast
  assign s_AXI_JTAG_rlast =
	     axi_to_jtag_internal_s_read_out_rv[47] &&
	     axi_to_jtag_internal_s_read_out_rv[0] ;

  // value method s_AXI_JTAG_s_write_fab_awready
  assign s_AXI_JTAG_awready =
	     !axi_to_jtag_internal_s_write_isRst_isInReset &&
	     !axi_to_jtag_internal_s_write_in_addr_rv$port1__read[73] ;

  // value method s_AXI_JTAG_s_write_fab_wready
  assign s_AXI_JTAG_wready =
	     !axi_to_jtag_internal_s_write_isRst_isInReset &&
	     !axi_to_jtag_internal_s_write_in_data_rv$port1__read[37] ;

  // value method s_AXI_JTAG_s_write_fab_bvalid
  assign s_AXI_JTAG_bvalid =
	     !axi_to_jtag_internal_s_write_isRst_isInReset &&
	     axi_to_jtag_internal_s_write_out_rv[14] ;

  // value method s_AXI_JTAG_s_write_fab_bresp
  assign s_AXI_JTAG_bresp =
	     axi_to_jtag_internal_s_write_out_rv[14] ?
	       axi_to_jtag_internal_s_write_out_rv[1:0] :
	       2'd0 ;

  // value method s_AXI_JTAG_s_write_fab_bid
  assign s_AXI_JTAG_bid =
	     axi_to_jtag_internal_s_write_out_rv[14] ?
	       axi_to_jtag_internal_s_write_out_rv[13:2] :
	       12'd0 ;

  // value method jtag_tck
  assign jtag_TCK =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk ;

  // value method jtag_tms
  assign jtag_TMS =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms ;

  // value method jtag_tdi
  assign jtag_TDI =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi ;

  // value method slave_select
  assign slave_select = axi_to_jtag_internal_jtag_tap_internal_slave_select ;

  // submodule axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req
  FIFO2 #(.width(32'd74),
	  .guarded(32'd1)) axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req(.RST(ARESETN),
										       .CLK(ACLK),
										       .D_IN(axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_IN),
										       .ENQ(axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$ENQ),
										       .DEQ(axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$DEQ),
										       .CLR(axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$CLR),
										       .D_OUT(axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_OUT),
										       .FULL_N(axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$FULL_N),
										       .EMPTY_N(axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$EMPTY_N));

  // submodule axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp
  FIFO2 #(.width(32'd64),
	  .guarded(32'd1)) axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp(.RST(ARESETN),
										       .CLK(ACLK),
										       .D_IN(axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$D_IN),
										       .ENQ(axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$ENQ),
										       .DEQ(axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$DEQ),
										       .CLR(axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$CLR),
										       .D_OUT(axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$D_OUT),
										       .FULL_N(axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$FULL_N),
										       .EMPTY_N(axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$EMPTY_N));

  // submodule axi_to_jtag_internal_jtag_tap_read_req_fifo
  FIFO2 #(.width(32'd32),
	  .guarded(32'd1)) axi_to_jtag_internal_jtag_tap_read_req_fifo(.RST(ARESETN),
								       .CLK(ACLK),
								       .D_IN(axi_to_jtag_internal_jtag_tap_read_req_fifo$D_IN),
								       .ENQ(axi_to_jtag_internal_jtag_tap_read_req_fifo$ENQ),
								       .DEQ(axi_to_jtag_internal_jtag_tap_read_req_fifo$DEQ),
								       .CLR(axi_to_jtag_internal_jtag_tap_read_req_fifo$CLR),
								       .D_OUT(axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT),
								       .FULL_N(axi_to_jtag_internal_jtag_tap_read_req_fifo$FULL_N),
								       .EMPTY_N(axi_to_jtag_internal_jtag_tap_read_req_fifo$EMPTY_N));

  // submodule axi_to_jtag_internal_jtag_tap_read_rsp_fifo
  FIFO2 #(.width(32'd64),
	  .guarded(32'd1)) axi_to_jtag_internal_jtag_tap_read_rsp_fifo(.RST(ARESETN),
								       .CLK(ACLK),
								       .D_IN(axi_to_jtag_internal_jtag_tap_read_rsp_fifo$D_IN),
								       .ENQ(axi_to_jtag_internal_jtag_tap_read_rsp_fifo$ENQ),
								       .DEQ(axi_to_jtag_internal_jtag_tap_read_rsp_fifo$DEQ),
								       .CLR(axi_to_jtag_internal_jtag_tap_read_rsp_fifo$CLR),
								       .D_OUT(axi_to_jtag_internal_jtag_tap_read_rsp_fifo$D_OUT),
								       .FULL_N(axi_to_jtag_internal_jtag_tap_read_rsp_fifo$FULL_N),
								       .EMPTY_N(axi_to_jtag_internal_jtag_tap_read_rsp_fifo$EMPTY_N));

  // submodule axi_to_jtag_internal_jtag_tap_write_req_fifo
  FIFO2 #(.width(32'd64),
	  .guarded(32'd1)) axi_to_jtag_internal_jtag_tap_write_req_fifo(.RST(ARESETN),
									.CLK(ACLK),
									.D_IN(axi_to_jtag_internal_jtag_tap_write_req_fifo$D_IN),
									.ENQ(axi_to_jtag_internal_jtag_tap_write_req_fifo$ENQ),
									.DEQ(axi_to_jtag_internal_jtag_tap_write_req_fifo$DEQ),
									.CLR(axi_to_jtag_internal_jtag_tap_write_req_fifo$CLR),
									.D_OUT(axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT),
									.FULL_N(axi_to_jtag_internal_jtag_tap_write_req_fifo$FULL_N),
									.EMPTY_N(axi_to_jtag_internal_jtag_tap_write_req_fifo$EMPTY_N));

  // submodule axi_to_jtag_internal_jtag_tap_write_rsp_fifo
  FIFO2 #(.width(32'd64),
	  .guarded(32'd1)) axi_to_jtag_internal_jtag_tap_write_rsp_fifo(.RST(ARESETN),
									.CLK(ACLK),
									.D_IN(axi_to_jtag_internal_jtag_tap_write_rsp_fifo$D_IN),
									.ENQ(axi_to_jtag_internal_jtag_tap_write_rsp_fifo$ENQ),
									.DEQ(axi_to_jtag_internal_jtag_tap_write_rsp_fifo$DEQ),
									.CLR(axi_to_jtag_internal_jtag_tap_write_rsp_fifo$CLR),
									.D_OUT(),
									.FULL_N(axi_to_jtag_internal_jtag_tap_write_rsp_fifo$FULL_N),
									.EMPTY_N(axi_to_jtag_internal_jtag_tap_write_rsp_fifo$EMPTY_N));

  // rule RL_axi_to_jtag_send_jtag_write_request
  assign WILL_FIRE_RL_axi_to_jtag_send_jtag_write_request =
	     axi_to_jtag_internal_jtag_tap_write_req_fifo$FULL_N &&
	     axi_to_jtag_received_addr &&
	     axi_to_jtag_received_data ;

  // rule RL_axi_to_jtag_internal_jtag_tap_receive_read_req
  assign WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_read_req =
	     axi_to_jtag_internal_jtag_tap_read_req_fifo$EMPTY_N &&
	     axi_to_jtag_internal_jtag_tap_read_rsp_fifo$FULL_N &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$FULL_N &&
	     !axi_to_jtag_internal_jtag_tap_started_read_request ;

  // rule RL_axi_to_jtag_internal_jtag_tap_read_data_register
  assign WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_read_data_register =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$FULL_N &&
	     axi_to_jtag_internal_jtag_tap_started_read_request ;

  // rule RL_axi_to_jtag_internal_jtag_tap_receive_write_request
  assign WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request =
	     axi_to_jtag_internal_jtag_tap_write_req_fifo$EMPTY_N &&
	     axi_to_jtag_internal_jtag_tap_write_rsp_fifo$FULL_N &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$FULL_N &&
	     !axi_to_jtag_internal_jtag_tap_started_write_request &&
	     !WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_read_data_register &&
	     !WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_read_req ;

  // rule RL_axi_to_jtag_internal_jtag_tap_write_data_register
  assign WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_write_data_register =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$FULL_N &&
	     axi_to_jtag_internal_jtag_tap_write_req_fifo$EMPTY_N &&
	     axi_to_jtag_internal_jtag_tap_started_write_request &&
	     !WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_read_data_register &&
	     !WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_read_req ;

  // rule RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_deq_request
  assign WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_deq_request =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$EMPTY_N &&
	     !axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access ;

  // rule RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_enq_response
  assign WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_enq_response =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$EMPTY_N &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$FULL_N &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready &&
	     !axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access ;

  // rule RL_axi_to_jtag_internal_jtag_tap_receive_jtag_response
  assign WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_jtag_response =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$EMPTY_N &&
	     axi_to_jtag_internal_jtag_tap_read_rsp_fifo$FULL_N &&
	     axi_to_jtag_internal_jtag_tap_write_rsp_fifo$FULL_N &&
	     !WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request &&
	     !WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_read_req ;

  // rule RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_fsm
  assign WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_fsm =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$EMPTY_N &&
	     !axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready &&
	     !axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	     4'd0 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state ==
	     3'd0 ;

  // rule RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm1
  assign WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm1 =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$EMPTY_N &&
	     !axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready &&
	     !axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state ==
	     3'd1 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	     4'd0 ;

  // rule RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm2
  assign WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm2 =
	     !axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready &&
	     !axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state ==
	     3'd2 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	     4'd0 ;

  // rule RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm3
  assign WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm3 =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$EMPTY_N &&
	     !axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready &&
	     !axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state ==
	     3'd3 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	     4'd0 ;

  // rule RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm4
  assign WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm4 =
	     !axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready &&
	     !axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state ==
	     3'd4 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	     4'd0 ;

  // rule RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_fsm
  assign WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_fsm =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state ==
	     3'd0 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state !=
	     4'd0 ;

  // inputs to muxes for submodule ports
  assign MUX_axi_to_jtag_internal_jtag_tap_access_dm$write_1__SEL_1 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_read_req &&
	     axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] == 8'd12 ;
  assign MUX_axi_to_jtag_internal_jtag_tap_access_dm$write_1__SEL_3 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_write_data_register ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_read_data_register ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read$write_1__SEL_1 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm4 &&
	     !axi_to_jtag_internal_jtag_tap_internal_jtag_ma_ETC___d143 ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$write_1__SEL_1 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_fsm &&
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd3 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd4 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd9 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd10) ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi$write_1__SEL_1 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm4 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_ma_ETC___d143 ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms$write_1__SEL_1 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm1 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_ma_ETC___d143 ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms$write_1__SEL_2 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_fsm &&
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd2 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd8) ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__SEL_1 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_read_req &&
	     (axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] ==
	      8'd4 ||
	      axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] ==
	      8'd8 ||
	      axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] ==
	      8'd12) ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__SEL_2 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request &&
	     (axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd0 &&
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[0] ||
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd8 ||
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd12 ||
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd16) ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready$write_1__SEL_1 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_fsm &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state ==
	     3'd3 ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value$write_1__SEL_1 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm3 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read !=
	     8'd0 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_OUT[1:0] ==
	     2'd2 ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$write_1__SEL_1 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_fsm &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state ==
	     3'd1 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_OUT[1:0] !=
	     2'd0 ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access$write_1__SEL_1 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_fsm &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state ==
	     3'd0 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$write_1__SEL_1 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_fsm &&
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state ==
	      3'd0 &&
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state ==
	      3'd2) ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state$write_1__SEL_2 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_fsm &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state !=
	     4'd1 &&
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_ma_ETC___d313 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd10 &&
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_reset_counter ==
	      8'h0) ;
  assign MUX_axi_to_jtag_internal_jtag_tap_read_dmi_reg$write_1__SEL_2 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_jtag_response &&
	     (axi_to_jtag_internal_jtag_tap_read_dmi_reg ||
	      axi_to_jtag_internal_jtag_tap_write_dmi_reg) ;
  assign MUX_axi_to_jtag_internal_jtag_tap_read_rsp_fifo$enq_1__SEL_1 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_jtag_response &&
	     axi_to_jtag_internal_jtag_tap_is_read_request ;
  assign MUX_axi_to_jtag_internal_jtag_tap_register_width$write_1__SEL_1 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request &&
	     (axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd8 ||
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd12 ||
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd16) ;
  assign MUX_axi_to_jtag_internal_jtag_tap_started_read_request$write_1__SEL_1 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request &&
	     axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	     8'd16 ;
  assign MUX_axi_to_jtag_internal_jtag_tap_started_write_request$write_1__SEL_1 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request &&
	     (axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd8 ||
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd12) ;
  assign MUX_axi_to_jtag_internal_jtag_tap_write_rsp_fifo$enq_1__SEL_1 =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request &&
	     (axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd0 &&
	      !axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[0] ||
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] !=
	      8'd0 &&
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] !=
	      8'd8 &&
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] !=
	      8'd12 &&
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] !=
	      8'd16) ;
  assign MUX_axi_to_jtag_received_addr$write_1__SEL_2 =
	     axi_to_jtag_internal_s_write_in_addr_rv[73] &&
	     !axi_to_jtag_received_addr ;
  assign MUX_axi_to_jtag_received_data$write_1__SEL_2 =
	     axi_to_jtag_internal_s_write_in_data_rv[37] &&
	     !axi_to_jtag_received_data ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read$write_1__VAL_1 =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read +
	     8'd1 ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$write_1__VAL_1 =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state !=
	     4'd3 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state !=
	     4'd9 ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi$write_1__VAL_2 =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_ma_ETC__q4[axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read[5:0]] ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms$write_1__VAL_2 =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state !=
	     4'd2 ||
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state !=
	     4'd0 &&
	     CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q5 ;
  always@(axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT)
  begin
    case (axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0])
      8'd4:
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_1 =
	      74'd1045;
      8'd8:
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_1 =
	      74'd16405;
      default: MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_1 =
		   74'd17429;
    endcase
  end
  always@(axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT)
  begin
    case (axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32])
      8'd0:
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_2 =
	      74'd0;
      8'd8:
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_2 =
	      74'd16405;
      default: MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_2 =
		   74'd17429;
    endcase
  end
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_3 =
	     { axi_to_jtag_internal_jtag_tap_access_dm ?
		 x_data__h10263 :
		 64'h0,
	       axi_to_jtag_internal_jtag_tap_register_width,
	       2'd2 } ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_4 =
	     { axi_to_jtag_internal_jtag_tap_access_dm ?
		 x_data__h11067 :
		 x_data__h11213,
	       axi_to_jtag_internal_jtag_tap_register_width,
	       2'd2 } ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value$write_1__VAL_1 =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdo ?
	       axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value |
	       x__h5382 :
	       axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value &
	       y__h5432 ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$write_1__VAL_2 =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_ma_ETC___d143 ?
	       3'd0 :
	       3'd1 ;
  always@(axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state or
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_reset_counter or
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state or
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state)
  begin
    case (axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state)
      4'd1:
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$write_1__VAL_2 =
	      (axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	       4'd0) ?
		4'd5 :
		4'd2;
      4'd2:
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$write_1__VAL_2 =
	      4'd3;
      4'd3:
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$write_1__VAL_2 =
	      4'd4;
      4'd4:
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$write_1__VAL_2 =
	      (axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	       axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state) ?
		4'd0 :
		4'd2;
      4'd5:
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$write_1__VAL_2 =
	      4'd6;
      4'd6:
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$write_1__VAL_2 =
	      4'd8;
      4'd8:
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$write_1__VAL_2 =
	      4'd9;
      4'd9:
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$write_1__VAL_2 =
	      4'd10;
      default: MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$write_1__VAL_2 =
		   (axi_to_jtag_internal_jtag_tap_internal_jtag_master_reset_counter ==
		    8'h0) ?
		     4'd0 :
		     4'd9;
    endcase
  end
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state$write_1__VAL_1 =
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_OUT[1:0] ==
	      2'd2) ?
	       4'd5 :
	       4'd12 ;
  assign MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state$write_1__VAL_2 =
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd2) ?
	       IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340 :
	       4'd0 ;
  assign MUX_axi_to_jtag_internal_jtag_tap_read_rsp_fifo$enq_1__VAL_1 =
	     (axi_to_jtag_internal_jtag_tap_read_dmi_reg ||
	      axi_to_jtag_internal_jtag_tap_write_dmi_reg) ?
	       y_avValue_data__h11333 :
	       axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$D_OUT ;
  always@(axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT or
	  response_data__h10017 or response_data__h10180)
  begin
    case (axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0])
      8'd0:
	  MUX_axi_to_jtag_internal_jtag_tap_read_rsp_fifo$enq_1__VAL_2 =
	      response_data__h10017;
      8'd16:
	  MUX_axi_to_jtag_internal_jtag_tap_read_rsp_fifo$enq_1__VAL_2 =
	      response_data__h10180;
      default: MUX_axi_to_jtag_internal_jtag_tap_read_rsp_fifo$enq_1__VAL_2 =
		   64'h00000000DEADBEEF;
    endcase
  end
  assign MUX_axi_to_jtag_internal_jtag_tap_register_width$write_1__VAL_1 =
	     (axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd8) ?
	       8'd31 :
	       8'd41 ;
  always@(axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT)
  begin
    case (axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0])
      8'd4, 8'd8:
	  MUX_axi_to_jtag_internal_jtag_tap_register_width$write_1__VAL_2 =
	      8'd31;
      default: MUX_axi_to_jtag_internal_jtag_tap_register_width$write_1__VAL_2 =
		   8'd41;
    endcase
  end

  // inlined wires
  assign axi_to_jtag_internal_s_read_arinpkg$wget =
	     { s_AXI_JTAG_arid,
	       s_AXI_JTAG_araddr,
	       s_AXI_JTAG_arlen,
	       s_AXI_JTAG_arsize,
	       s_AXI_JTAG_arburst,
	       s_AXI_JTAG_arlock,
	       IF_s_AXI_JTAG_arcache_EQ_0_18_OR_s_AXI_JTAG_ar_ETC___d533 } ;
  assign axi_to_jtag_internal_s_write_arinpkg_addr$wget =
	     { s_AXI_JTAG_awid,
	       s_AXI_JTAG_awaddr,
	       s_AXI_JTAG_awlen,
	       s_AXI_JTAG_awsize,
	       s_AXI_JTAG_awburst,
	       s_AXI_JTAG_awlock,
	       IF_s_AXI_JTAG_awcache_EQ_0_46_OR_s_AXI_JTAG_aw_ETC___d561 } ;
  assign axi_to_jtag_internal_s_write_arinpkg_data$wget =
	     { s_AXI_JTAG_wdata, s_AXI_JTAG_wstrb, s_AXI_JTAG_wlast } ;
  assign axi_to_jtag_internal_s_read_in_rv$EN_port0__write =
	     axi_to_jtag_internal_s_read_in_rv[73] &&
	     axi_to_jtag_internal_jtag_tap_read_req_fifo$FULL_N ;
  assign axi_to_jtag_internal_s_read_in_rv$port1__read =
	     axi_to_jtag_internal_s_read_in_rv$EN_port0__write ?
	       74'h0AAAAAAAAAAAAAAAAAA :
	       axi_to_jtag_internal_s_read_in_rv ;
  assign axi_to_jtag_internal_s_read_in_rv$EN_port1__write =
	     !axi_to_jtag_internal_s_read_in_rv$port1__read[73] &&
	     !axi_to_jtag_internal_s_read_isRst_isInReset &&
	     s_AXI_JTAG_arvalid ;
  assign axi_to_jtag_internal_s_read_in_rv$port1__write_1 =
	     { 1'd1,
	       axi_to_jtag_internal_s_read_arinpkg$wget[72:15],
	       CASE_axi_to_jtag_internal_s_read_arinpkgwget__ETC__q6,
	       axi_to_jtag_internal_s_read_arinpkg$wget[10:0] } ;
  assign axi_to_jtag_internal_s_read_in_rv$port2__read =
	     axi_to_jtag_internal_s_read_in_rv$EN_port1__write ?
	       axi_to_jtag_internal_s_read_in_rv$port1__write_1 :
	       axi_to_jtag_internal_s_read_in_rv$port1__read ;
  assign axi_to_jtag_internal_s_read_out_rv$EN_port0__write =
	     axi_to_jtag_internal_s_read_out_rv[47] &&
	     !axi_to_jtag_internal_s_read_isRst_isInReset &&
	     s_AXI_JTAG_rready ;
  assign axi_to_jtag_internal_s_read_out_rv$port1__read =
	     axi_to_jtag_internal_s_read_out_rv$EN_port0__write ?
	       48'h2AAAAAAAAAAA :
	       axi_to_jtag_internal_s_read_out_rv ;
  assign axi_to_jtag_internal_s_read_out_rv$EN_port1__write =
	     axi_to_jtag_internal_jtag_tap_read_rsp_fifo$EMPTY_N &&
	     !axi_to_jtag_internal_s_read_out_rv$port1__read[47] ;
  assign axi_to_jtag_internal_s_read_out_rv$port1__write_1 =
	     { 1'd1,
	       axi_to_jtag_read_id,
	       axi_to_jtag_internal_jtag_tap_read_rsp_fifo$D_OUT[31:0],
	       3'd1 } ;
  assign axi_to_jtag_internal_s_read_out_rv$port2__read =
	     axi_to_jtag_internal_s_read_out_rv$EN_port1__write ?
	       axi_to_jtag_internal_s_read_out_rv$port1__write_1 :
	       axi_to_jtag_internal_s_read_out_rv$port1__read ;
  assign axi_to_jtag_internal_s_write_in_addr_rv$port1__read =
	     MUX_axi_to_jtag_received_addr$write_1__SEL_2 ?
	       74'h0AAAAAAAAAAAAAAAAAA :
	       axi_to_jtag_internal_s_write_in_addr_rv ;
  assign axi_to_jtag_internal_s_write_in_addr_rv$EN_port1__write =
	     !axi_to_jtag_internal_s_write_in_addr_rv$port1__read[73] &&
	     !axi_to_jtag_internal_s_write_isRst_isInReset &&
	     s_AXI_JTAG_awvalid ;
  assign axi_to_jtag_internal_s_write_in_addr_rv$port1__write_1 =
	     { 1'd1,
	       axi_to_jtag_internal_s_write_arinpkg_addr$wget[72:15],
	       CASE_axi_to_jtag_internal_s_write_arinpkg_addr_ETC__q7,
	       axi_to_jtag_internal_s_write_arinpkg_addr$wget[10:0] } ;
  assign axi_to_jtag_internal_s_write_in_addr_rv$port2__read =
	     axi_to_jtag_internal_s_write_in_addr_rv$EN_port1__write ?
	       axi_to_jtag_internal_s_write_in_addr_rv$port1__write_1 :
	       axi_to_jtag_internal_s_write_in_addr_rv$port1__read ;
  assign axi_to_jtag_internal_s_write_in_data_rv$port1__read =
	     MUX_axi_to_jtag_received_data$write_1__SEL_2 ?
	       38'h0AAAAAAAAA :
	       axi_to_jtag_internal_s_write_in_data_rv ;
  assign axi_to_jtag_internal_s_write_in_data_rv$EN_port1__write =
	     !axi_to_jtag_internal_s_write_in_data_rv$port1__read[37] &&
	     !axi_to_jtag_internal_s_write_isRst_isInReset &&
	     s_AXI_JTAG_wvalid ;
  assign axi_to_jtag_internal_s_write_in_data_rv$port1__write_1 =
	     { 1'd1, axi_to_jtag_internal_s_write_arinpkg_data$wget } ;
  assign axi_to_jtag_internal_s_write_in_data_rv$port2__read =
	     axi_to_jtag_internal_s_write_in_data_rv$EN_port1__write ?
	       axi_to_jtag_internal_s_write_in_data_rv$port1__write_1 :
	       axi_to_jtag_internal_s_write_in_data_rv$port1__read ;
  assign axi_to_jtag_internal_s_write_out_rv$EN_port0__write =
	     axi_to_jtag_internal_s_write_out_rv[14] &&
	     !axi_to_jtag_internal_s_write_isRst_isInReset &&
	     s_AXI_JTAG_bready ;
  assign axi_to_jtag_internal_s_write_out_rv$port1__read =
	     axi_to_jtag_internal_s_write_out_rv$EN_port0__write ?
	       15'd10922 :
	       axi_to_jtag_internal_s_write_out_rv ;
  assign axi_to_jtag_internal_s_write_out_rv$EN_port1__write =
	     axi_to_jtag_internal_jtag_tap_write_rsp_fifo$EMPTY_N &&
	     !axi_to_jtag_internal_s_write_out_rv$port1__read[14] ;
  assign axi_to_jtag_internal_s_write_out_rv$port1__write_1 =
	     { 1'd1, axi_to_jtag_write_id, 2'd0 } ;
  assign axi_to_jtag_internal_s_write_out_rv$port2__read =
	     axi_to_jtag_internal_s_write_out_rv$EN_port1__write ?
	       axi_to_jtag_internal_s_write_out_rv$port1__write_1 :
	       axi_to_jtag_internal_s_write_out_rv$port1__read ;

  // register axi_to_jtag_address
  assign axi_to_jtag_address$D_IN =
	     axi_to_jtag_internal_s_write_in_addr_rv[60:29] ;
  assign axi_to_jtag_address$EN =
	     MUX_axi_to_jtag_received_addr$write_1__SEL_2 ;

  // register axi_to_jtag_data
  assign axi_to_jtag_data$D_IN =
	     axi_to_jtag_internal_s_write_in_data_rv[36:5] ;
  assign axi_to_jtag_data$EN = MUX_axi_to_jtag_received_data$write_1__SEL_2 ;

  // register axi_to_jtag_internal_jtag_tap_access_dm
  assign axi_to_jtag_internal_jtag_tap_access_dm$D_IN =
	     !MUX_axi_to_jtag_internal_jtag_tap_access_dm$write_1__SEL_3 ;
  assign axi_to_jtag_internal_jtag_tap_access_dm$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_read_req &&
	     axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] ==
	     8'd12 ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request &&
	     (axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd12 ||
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd16) ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_write_data_register ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_read_data_register ;

  // register axi_to_jtag_internal_jtag_tap_dm_address
  assign axi_to_jtag_internal_jtag_tap_dm_address$D_IN =
	     axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[6:0] ;
  assign axi_to_jtag_internal_jtag_tap_dm_address$EN =
	     MUX_axi_to_jtag_internal_jtag_tap_started_read_request$write_1__SEL_1 ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read$D_IN =
	     MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read$write_1__SEL_1 ?
	       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read$write_1__VAL_1 :
	       8'h0 ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm4 &&
	     !axi_to_jtag_internal_jtag_tap_internal_jtag_ma_ETC___d143 ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_deq_request ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_to_read
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_to_read$D_IN =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_OUT[9:2] ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_to_read$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_deq_request ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state$D_IN =
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state ==
	      3'd0) ?
	       CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q8 :
	       4'd1 ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state$EN =
	     MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$write_1__SEL_1 ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access$D_IN =
	     !WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_deq_request ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_deq_request ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_enq_response ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk
  always@(MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$write_1__SEL_1 or
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$write_1__VAL_1 or
	  WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm2 or
	  WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$write_1__SEL_1:
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$D_IN =
	      MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$write_1__VAL_1;
      WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm2:
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$D_IN =
	      1'd0;
      WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm4:
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$D_IN =
	      1'd1;
      default: axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$D_IN =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_fsm &&
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd3 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd4 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd9 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd10) ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm2 ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm4 ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi$D_IN =
	     !MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi$write_1__SEL_1 &&
	     MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi$write_1__VAL_2 ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm4 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_ma_ETC___d143 ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm1 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_OUT[1:0] !=
	     2'd0 ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdo
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdo$D_IN =
	     jtag_TDO ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdo$EN =
	     1'd1 ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms$D_IN =
	     MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms$write_1__SEL_1 ||
	     MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms$write_1__VAL_2 ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm1 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_ma_ETC___d143 ||
	     MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms$write_1__SEL_2 ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_trst
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_trst$D_IN =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	     4'd5 ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_trst$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_fsm &&
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd5 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd6) ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state
  always@(axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state)
  begin
    case (axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state)
      3'd0:
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state$D_IN =
	      3'd1;
      3'd1:
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state$D_IN =
	      3'd2;
      3'd2:
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state$D_IN =
	      3'd3;
      default: axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state$D_IN =
		   3'd0;
    endcase
  end
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_fsm &&
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state ==
	      3'd0 &&
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state ==
	      3'd1 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state ==
	      3'd2 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state ==
	      3'd3 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state ==
	      3'd4) ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_reset_counter
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_reset_counter$D_IN =
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd8) ?
	       8'h05 :
	       axi_to_jtag_internal_jtag_tap_internal_jtag_master_reset_counter -
	       8'd1 ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_reset_counter$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_fsm &&
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd8 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd10) ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready$D_IN =
	     MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready$write_1__SEL_1 ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_fsm &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state ==
	     3'd3 ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_enq_response ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_deq_request ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value$D_IN =
	     MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value$write_1__SEL_1 ?
	       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value$write_1__VAL_1 :
	       64'h0000000000000001 ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm3 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read !=
	     8'd0 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_OUT[1:0] ==
	     2'd2 ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_deq_request ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state
  always@(MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$write_1__SEL_1 or
	  WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm4 or
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$write_1__VAL_2 or
	  WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm1 or
	  WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm2 or
	  WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$write_1__SEL_1:
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$D_IN =
	      3'd1;
      WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm4:
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$D_IN =
	      MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$write_1__VAL_2;
      WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm1:
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$D_IN =
	      3'd2;
      WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm2:
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$D_IN =
	      3'd3;
      WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm3:
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$D_IN =
	      3'd4;
      default: axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$D_IN =
		   3'b010 /* unspecified value */ ;
    endcase
  end
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_fsm &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state ==
	     3'd1 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_OUT[1:0] !=
	     2'd0 ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm4 ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm1 ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm2 ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm3 ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access$D_IN =
	     !MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access$write_1__SEL_1 ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_fsm &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state ==
	     3'd0 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_deq_request ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$D_IN =
	     MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$write_1__SEL_1 ?
	       4'd1 :
	       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$write_1__VAL_2 ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_fsm &&
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state ==
	      3'd0 &&
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state ==
	      3'd2) ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_fsm &&
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd1 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd2 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd3 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd4 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd5 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd6 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd8 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd9 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	      4'd10) ;

  // register axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state$D_IN =
	     MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms$write_1__SEL_1 ?
	       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state$write_1__VAL_1 :
	       MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state$write_1__VAL_2 ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_data_fsm1 &&
	     axi_to_jtag_internal_jtag_tap_internal_jtag_ma_ETC___d143 ||
	     MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state$write_1__SEL_2 ;

  // register axi_to_jtag_internal_jtag_tap_internal_slave_select
  assign axi_to_jtag_internal_jtag_tap_internal_slave_select$D_IN =
	     axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[2:1] ;
  assign axi_to_jtag_internal_jtag_tap_internal_slave_select$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request &&
	     axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	     8'd0 ;

  // register axi_to_jtag_internal_jtag_tap_is_read_request
  assign axi_to_jtag_internal_jtag_tap_is_read_request$D_IN =
	     !WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request ;
  assign axi_to_jtag_internal_jtag_tap_is_read_request$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_read_req ;

  // register axi_to_jtag_internal_jtag_tap_read_dmi_reg
  assign axi_to_jtag_internal_jtag_tap_read_dmi_reg$D_IN =
	     MUX_axi_to_jtag_internal_jtag_tap_access_dm$write_1__SEL_1 ;
  assign axi_to_jtag_internal_jtag_tap_read_dmi_reg$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_read_req &&
	     axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] ==
	     8'd12 ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_jtag_response &&
	     (axi_to_jtag_internal_jtag_tap_read_dmi_reg ||
	      axi_to_jtag_internal_jtag_tap_write_dmi_reg) ;

  // register axi_to_jtag_internal_jtag_tap_register_width
  assign axi_to_jtag_internal_jtag_tap_register_width$D_IN =
	     MUX_axi_to_jtag_internal_jtag_tap_register_width$write_1__SEL_1 ?
	       MUX_axi_to_jtag_internal_jtag_tap_register_width$write_1__VAL_1 :
	       MUX_axi_to_jtag_internal_jtag_tap_register_width$write_1__VAL_2 ;
  assign axi_to_jtag_internal_jtag_tap_register_width$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request &&
	     (axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd8 ||
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd12 ||
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd16) ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_read_req &&
	     (axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] ==
	      8'd4 ||
	      axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] ==
	      8'd8 ||
	      axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] ==
	      8'd12) ;

  // register axi_to_jtag_internal_jtag_tap_started_read_request
  assign axi_to_jtag_internal_jtag_tap_started_read_request$D_IN =
	     !WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_read_data_register ;
  assign axi_to_jtag_internal_jtag_tap_started_read_request$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request &&
	     axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	     8'd16 ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_read_req &&
	     (axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] ==
	      8'd4 ||
	      axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] ==
	      8'd8 ||
	      axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] ==
	      8'd12) ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_read_data_register ;

  // register axi_to_jtag_internal_jtag_tap_started_write_request
  assign axi_to_jtag_internal_jtag_tap_started_write_request$D_IN =
	     MUX_axi_to_jtag_internal_jtag_tap_started_write_request$write_1__SEL_1 ;
  assign axi_to_jtag_internal_jtag_tap_started_write_request$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request &&
	     (axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd8 ||
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd12) ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_write_data_register ;

  // register axi_to_jtag_internal_jtag_tap_write_dmi_reg
  assign axi_to_jtag_internal_jtag_tap_write_dmi_reg$D_IN =
	     !MUX_axi_to_jtag_internal_jtag_tap_read_dmi_reg$write_1__SEL_2 ;
  assign axi_to_jtag_internal_jtag_tap_write_dmi_reg$EN =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_jtag_response &&
	     (axi_to_jtag_internal_jtag_tap_read_dmi_reg ||
	      axi_to_jtag_internal_jtag_tap_write_dmi_reg) ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request &&
	     (axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd12 ||
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd16) ;

  // register axi_to_jtag_internal_s_read_in_rv
  assign axi_to_jtag_internal_s_read_in_rv$D_IN =
	     axi_to_jtag_internal_s_read_in_rv$port2__read ;
  assign axi_to_jtag_internal_s_read_in_rv$EN = 1'b1 ;

  // register axi_to_jtag_internal_s_read_isRst_isInReset
  assign axi_to_jtag_internal_s_read_isRst_isInReset$D_IN = 1'd0 ;
  assign axi_to_jtag_internal_s_read_isRst_isInReset$EN =
	     axi_to_jtag_internal_s_read_isRst_isInReset ;

  // register axi_to_jtag_internal_s_read_out_rv
  assign axi_to_jtag_internal_s_read_out_rv$D_IN =
	     axi_to_jtag_internal_s_read_out_rv$port2__read ;
  assign axi_to_jtag_internal_s_read_out_rv$EN = 1'b1 ;

  // register axi_to_jtag_internal_s_write_in_addr_rv
  assign axi_to_jtag_internal_s_write_in_addr_rv$D_IN =
	     axi_to_jtag_internal_s_write_in_addr_rv$port2__read ;
  assign axi_to_jtag_internal_s_write_in_addr_rv$EN = 1'b1 ;

  // register axi_to_jtag_internal_s_write_in_data_rv
  assign axi_to_jtag_internal_s_write_in_data_rv$D_IN =
	     axi_to_jtag_internal_s_write_in_data_rv$port2__read ;
  assign axi_to_jtag_internal_s_write_in_data_rv$EN = 1'b1 ;

  // register axi_to_jtag_internal_s_write_isRst_isInReset
  assign axi_to_jtag_internal_s_write_isRst_isInReset$D_IN = 1'd0 ;
  assign axi_to_jtag_internal_s_write_isRst_isInReset$EN =
	     axi_to_jtag_internal_s_write_isRst_isInReset ;

  // register axi_to_jtag_internal_s_write_out_rv
  assign axi_to_jtag_internal_s_write_out_rv$D_IN =
	     axi_to_jtag_internal_s_write_out_rv$port2__read ;
  assign axi_to_jtag_internal_s_write_out_rv$EN = 1'b1 ;

  // register axi_to_jtag_read_id
  assign axi_to_jtag_read_id$D_IN = axi_to_jtag_internal_s_read_in_rv[72:61] ;
  assign axi_to_jtag_read_id$EN =
	     axi_to_jtag_internal_s_read_in_rv[73] &&
	     axi_to_jtag_internal_jtag_tap_read_req_fifo$FULL_N ;

  // register axi_to_jtag_received_addr
  assign axi_to_jtag_received_addr$D_IN =
	     !WILL_FIRE_RL_axi_to_jtag_send_jtag_write_request ;
  assign axi_to_jtag_received_addr$EN =
	     WILL_FIRE_RL_axi_to_jtag_send_jtag_write_request ||
	     axi_to_jtag_internal_s_write_in_addr_rv[73] &&
	     !axi_to_jtag_received_addr ;

  // register axi_to_jtag_received_data
  assign axi_to_jtag_received_data$D_IN =
	     !WILL_FIRE_RL_axi_to_jtag_send_jtag_write_request ;
  assign axi_to_jtag_received_data$EN =
	     WILL_FIRE_RL_axi_to_jtag_send_jtag_write_request ||
	     axi_to_jtag_internal_s_write_in_data_rv[37] &&
	     !axi_to_jtag_received_data ;

  // register axi_to_jtag_write_id
  assign axi_to_jtag_write_id$D_IN =
	     axi_to_jtag_internal_s_write_in_addr_rv[72:61] ;
  assign axi_to_jtag_write_id$EN =
	     MUX_axi_to_jtag_received_addr$write_1__SEL_2 ;

  // submodule axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req
  always@(MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__SEL_1 or
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_1 or
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__SEL_2 or
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_2 or
	  WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_read_data_register or
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_3 or
	  WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_write_data_register or
	  MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__SEL_1:
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_IN =
	      MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_1;
      MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__SEL_2:
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_IN =
	      MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_2;
      WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_read_data_register:
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_IN =
	      MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_3;
      WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_write_data_register:
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_IN =
	      MUX_axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$enq_1__VAL_4;
      default: axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_IN =
		   74'h2AAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$ENQ =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_read_req &&
	     (axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] ==
	      8'd4 ||
	      axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] ==
	      8'd8 ||
	      axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] ==
	      8'd12) ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request &&
	     (axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd0 &&
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[0] ||
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd8 ||
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd12 ||
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd16) ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_read_data_register ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_write_data_register ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$DEQ =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_enq_response ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$CLR =
	     1'b0 ;

  // submodule axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$D_IN =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$ENQ =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_internal_jtag_master_enq_response &&
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_OUT[1:0] ==
	      2'd0 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_OUT[1:0] ==
	      2'd2) ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$DEQ =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_jtag_response ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$CLR =
	     1'b0 ;

  // submodule axi_to_jtag_internal_jtag_tap_read_req_fifo
  assign axi_to_jtag_internal_jtag_tap_read_req_fifo$D_IN =
	     axi_to_jtag_internal_s_read_in_rv[60:29] ;
  assign axi_to_jtag_internal_jtag_tap_read_req_fifo$ENQ =
	     axi_to_jtag_internal_s_read_in_rv[73] &&
	     axi_to_jtag_internal_jtag_tap_read_req_fifo$FULL_N ;
  assign axi_to_jtag_internal_jtag_tap_read_req_fifo$DEQ =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_read_req ;
  assign axi_to_jtag_internal_jtag_tap_read_req_fifo$CLR = 1'b0 ;

  // submodule axi_to_jtag_internal_jtag_tap_read_rsp_fifo
  assign axi_to_jtag_internal_jtag_tap_read_rsp_fifo$D_IN =
	     MUX_axi_to_jtag_internal_jtag_tap_read_rsp_fifo$enq_1__SEL_1 ?
	       MUX_axi_to_jtag_internal_jtag_tap_read_rsp_fifo$enq_1__VAL_1 :
	       MUX_axi_to_jtag_internal_jtag_tap_read_rsp_fifo$enq_1__VAL_2 ;
  assign axi_to_jtag_internal_jtag_tap_read_rsp_fifo$ENQ =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_jtag_response &&
	     axi_to_jtag_internal_jtag_tap_is_read_request ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_read_req &&
	     axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] != 8'd4 &&
	     axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] != 8'd8 &&
	     axi_to_jtag_internal_jtag_tap_read_req_fifo$D_OUT[7:0] != 8'd12 ;
  assign axi_to_jtag_internal_jtag_tap_read_rsp_fifo$DEQ =
	     axi_to_jtag_internal_jtag_tap_read_rsp_fifo$EMPTY_N &&
	     !axi_to_jtag_internal_s_read_out_rv$port1__read[47] ;
  assign axi_to_jtag_internal_jtag_tap_read_rsp_fifo$CLR = 1'b0 ;

  // submodule axi_to_jtag_internal_jtag_tap_write_req_fifo
  assign axi_to_jtag_internal_jtag_tap_write_req_fifo$D_IN =
	     { axi_to_jtag_address, axi_to_jtag_data } ;
  assign axi_to_jtag_internal_jtag_tap_write_req_fifo$ENQ =
	     WILL_FIRE_RL_axi_to_jtag_send_jtag_write_request ;
  assign axi_to_jtag_internal_jtag_tap_write_req_fifo$DEQ =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request &&
	     axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] !=
	     8'd8 &&
	     axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] !=
	     8'd12 ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_write_data_register ;
  assign axi_to_jtag_internal_jtag_tap_write_req_fifo$CLR = 1'b0 ;

  // submodule axi_to_jtag_internal_jtag_tap_write_rsp_fifo
  assign axi_to_jtag_internal_jtag_tap_write_rsp_fifo$D_IN =
	     MUX_axi_to_jtag_internal_jtag_tap_write_rsp_fifo$enq_1__SEL_1 ?
	       64'h00000000DEADBEEF :
	       MUX_axi_to_jtag_internal_jtag_tap_read_rsp_fifo$enq_1__VAL_1 ;
  assign axi_to_jtag_internal_jtag_tap_write_rsp_fifo$ENQ =
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_write_request &&
	     (axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] ==
	      8'd0 &&
	      !axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[0] ||
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] !=
	      8'd0 &&
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] !=
	      8'd8 &&
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] !=
	      8'd12 &&
	      axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[39:32] !=
	      8'd16) ||
	     WILL_FIRE_RL_axi_to_jtag_internal_jtag_tap_receive_jtag_response &&
	     !axi_to_jtag_internal_jtag_tap_is_read_request ;
  assign axi_to_jtag_internal_jtag_tap_write_rsp_fifo$DEQ =
	     axi_to_jtag_internal_jtag_tap_write_rsp_fifo$EMPTY_N &&
	     !axi_to_jtag_internal_s_write_out_rv$port1__read[14] ;
  assign axi_to_jtag_internal_jtag_tap_write_rsp_fifo$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d321 =
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	      4'd1) ?
	       axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state :
	       4'd2 ;
  assign IF_s_AXI_JTAG_arcache_EQ_0_18_OR_s_AXI_JTAG_ar_ETC___d533 =
	     { CASE_s_AXI_JTAG_arcache_0_s_AXI_JTAG_arcache_1_ETC__q1,
	       s_AXI_JTAG_arprot,
	       s_AXI_JTAG_arqos,
	       s_AXI_JTAG_arregion } ;
  assign IF_s_AXI_JTAG_awcache_EQ_0_46_OR_s_AXI_JTAG_aw_ETC___d561 =
	     { CASE_s_AXI_JTAG_awcache_0_s_AXI_JTAG_awcache_1_ETC__q2,
	       s_AXI_JTAG_awprot,
	       s_AXI_JTAG_awqos,
	       s_AXI_JTAG_awregion } ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_ma_ETC___d143 =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_to_read ==
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read +
	     8'd1 ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_ma_ETC___d313 =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state ==
	     4'd2 &&
	     (axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	      4'd0 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	      4'd1 &&
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state !=
	      4'd1 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	      4'd2 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	      4'd3 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	      4'd4 &&
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state !=
	      4'd4 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	      4'd5 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	      4'd6 &&
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state !=
	      4'd6 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	      4'd7 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	      4'd8 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	      4'd9 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	      4'd10 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	      4'd11 &&
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state !=
	      4'd11 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	      4'd12 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	      4'd13 &&
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state !=
	      4'd13 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	      4'd14 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state ==
	      4'd15) ;
  assign axi_to_jtag_internal_jtag_tap_internal_jtag_ma_ETC__q4 =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_OUT[73:10] ;
  assign response_data__h10017 =
	     { 61'd360136704,
	       axi_to_jtag_internal_jtag_tap_internal_slave_select,
	       1'd0 } ;
  assign response_data__h10180 =
	     { 57'd0, axi_to_jtag_internal_jtag_tap_dm_address } ;
  assign x__h5382 = 64'd1 << x__h5409 ;
  assign x__h5409 =
	     axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read -
	     8'd1 ;
  assign x_data__h10263 =
	     { 23'd0, axi_to_jtag_internal_jtag_tap_dm_address, 34'd1 } ;
  assign x_data__h11067 =
	     { 23'd0,
	       axi_to_jtag_internal_jtag_tap_dm_address,
	       axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[31:0],
	       2'd2 } ;
  assign x_data__h11213 =
	     { 32'd0,
	       axi_to_jtag_internal_jtag_tap_write_req_fifo$D_OUT[31:0] } ;
  assign y__h5432 = ~x__h5382 ;
  assign y_avValue_data__h11333 =
	     { 2'd0,
	       axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_rsp$D_OUT[63:2] } ;
  always@(s_AXI_JTAG_arcache)
  begin
    case (s_AXI_JTAG_arcache)
      4'd0, 4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  CASE_s_AXI_JTAG_arcache_0_s_AXI_JTAG_arcache_1_ETC__q1 =
	      s_AXI_JTAG_arcache;
      default: CASE_s_AXI_JTAG_arcache_0_s_AXI_JTAG_arcache_1_ETC__q1 = 4'd11;
    endcase
  end
  always@(s_AXI_JTAG_awcache)
  begin
    case (s_AXI_JTAG_awcache)
      4'd0, 4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  CASE_s_AXI_JTAG_awcache_0_s_AXI_JTAG_awcache_1_ETC__q2 =
	      s_AXI_JTAG_awcache;
      default: CASE_s_AXI_JTAG_awcache_0_s_AXI_JTAG_awcache_1_ETC__q2 = 4'd15;
    endcase
  end
  always@(axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state)
  begin
    case (axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state)
      4'd0, 4'd1, 4'd9, 4'd10, 4'd11, 4'd12, 4'd13, 4'd14, 4'd15:
	  CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q3 = 4'd9;
      default: CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q3 = 4'd3;
    endcase
  end
  always@(axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state or
	  IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d321 or
	  CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q3 or
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state)
  begin
    case (axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state)
      4'd0: IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340 = 4'd1;
      4'd1: IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340 = 4'd2;
      4'd2:
	  IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340 =
	      CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q3;
      4'd3:
	  IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340 =
	      (axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	       4'd5) ?
		axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state :
		4'd4;
      4'd4: IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340 = 4'd5;
      4'd5:
	  IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340 =
	      (axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	       4'd8) ?
		axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state :
		4'd6;
      4'd6: IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340 = 4'd7;
      4'd7:
	  IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340 =
	      (axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	       4'd4) ?
		axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state :
		4'd15;
      4'd8, 4'd15:
	  IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340 =
	      IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d321;
      4'd9:
	  IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340 =
	      (axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	       4'd0) ?
		axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state :
		4'd10;
      4'd10:
	  IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340 =
	      (axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	       4'd12) ?
		axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state :
		4'd11;
      4'd11:
	  IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340 = 4'd12;
      4'd12:
	  IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340 =
	      (axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	       4'd15) ?
		axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state :
		4'd13;
      4'd13:
	  IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340 = 4'd14;
      4'd14:
	  IF_axi_to_jtag_internal_jtag_tap_internal_jtag_ETC___d340 =
	      (axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	       4'd11) ?
		axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state :
		4'd15;
    endcase
  end
  always@(axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state or
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state)
  begin
    case (axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state)
      4'd1, 4'd8:
	  CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q5 =
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state !=
	      4'd1;
      4'd2:
	  CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q5 =
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	      4'd0 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	      4'd1 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	      4'd9 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	      4'd10 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	      4'd11 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	      4'd12 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	      4'd13 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	      4'd14 ||
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	      4'd15;
      4'd3:
	  CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q5 =
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	      4'd5;
      4'd4, 4'd7:
	  CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q5 =
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state !=
	      4'd4;
      4'd5:
	  CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q5 =
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	      4'd8;
      4'd6:
	  CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q5 =
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state !=
	      4'd6;
      4'd9:
	  CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q5 =
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	      4'd0;
      4'd10:
	  CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q5 =
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	      4'd12;
      4'd11, 4'd14:
	  CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q5 =
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state !=
	      4'd11;
      4'd12:
	  CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q5 =
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state ==
	      4'd15;
      4'd13:
	  CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q5 =
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state !=
	      4'd13;
      default: CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q5 =
		   axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state !=
		   4'd1;
    endcase
  end
  always@(axi_to_jtag_internal_s_read_arinpkg$wget)
  begin
    case (axi_to_jtag_internal_s_read_arinpkg$wget[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  CASE_axi_to_jtag_internal_s_read_arinpkgwget__ETC__q6 =
	      axi_to_jtag_internal_s_read_arinpkg$wget[14:11];
      default: CASE_axi_to_jtag_internal_s_read_arinpkgwget__ETC__q6 = 4'd11;
    endcase
  end
  always@(axi_to_jtag_internal_s_write_arinpkg_addr$wget)
  begin
    case (axi_to_jtag_internal_s_write_arinpkg_addr$wget[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  CASE_axi_to_jtag_internal_s_write_arinpkg_addr_ETC__q7 =
	      axi_to_jtag_internal_s_write_arinpkg_addr$wget[14:11];
      default: CASE_axi_to_jtag_internal_s_write_arinpkg_addr_ETC__q7 = 4'd15;
    endcase
  end
  always@(axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_OUT)
  begin
    case (axi_to_jtag_internal_jtag_tap_internal_jtag_master_jtag_req$D_OUT[1:0])
      2'd0: CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q8 = 4'd0;
      2'd1: CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q8 = 4'd11;
      default: CASE_axi_to_jtag_internal_jtag_tap_internal_jt_ETC__q8 = 4'd4;
    endcase
  end

  // handling of inlined registers

  always@(posedge ACLK)
  begin
    if (ARESETN == `BSV_RESET_VALUE)
      begin
        axi_to_jtag_address <= `BSV_ASSIGNMENT_DELAY 32'd0;
	axi_to_jtag_data <= `BSV_ASSIGNMENT_DELAY 32'd0;
	axi_to_jtag_internal_jtag_tap_access_dm <= `BSV_ASSIGNMENT_DELAY 1'd0;
	axi_to_jtag_internal_jtag_tap_dm_address <= `BSV_ASSIGNMENT_DELAY
	    7'd0;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_to_read <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state <= `BSV_ASSIGNMENT_DELAY
	    4'd0;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdo <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms <= `BSV_ASSIGNMENT_DELAY
	    1'd1;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_trst <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_reset_counter <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value <= `BSV_ASSIGNMENT_DELAY
	    64'd0;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state <= `BSV_ASSIGNMENT_DELAY
	    4'd0;
	axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state <= `BSV_ASSIGNMENT_DELAY
	    4'd0;
	axi_to_jtag_internal_jtag_tap_internal_slave_select <= `BSV_ASSIGNMENT_DELAY
	    2'd0;
	axi_to_jtag_internal_jtag_tap_is_read_request <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	axi_to_jtag_internal_jtag_tap_read_dmi_reg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	axi_to_jtag_internal_jtag_tap_register_width <= `BSV_ASSIGNMENT_DELAY
	    8'd0;
	axi_to_jtag_internal_jtag_tap_started_read_request <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	axi_to_jtag_internal_jtag_tap_started_write_request <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	axi_to_jtag_internal_jtag_tap_write_dmi_reg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	axi_to_jtag_internal_s_read_in_rv <= `BSV_ASSIGNMENT_DELAY
	    74'h0AAAAAAAAAAAAAAAAAA;
	axi_to_jtag_internal_s_read_out_rv <= `BSV_ASSIGNMENT_DELAY
	    48'h2AAAAAAAAAAA;
	axi_to_jtag_internal_s_write_in_addr_rv <= `BSV_ASSIGNMENT_DELAY
	    74'h0AAAAAAAAAAAAAAAAAA;
	axi_to_jtag_internal_s_write_in_data_rv <= `BSV_ASSIGNMENT_DELAY
	    38'h0AAAAAAAAA;
	axi_to_jtag_internal_s_write_out_rv <= `BSV_ASSIGNMENT_DELAY
	    15'd10922;
	axi_to_jtag_read_id <= `BSV_ASSIGNMENT_DELAY 12'd0;
	axi_to_jtag_received_addr <= `BSV_ASSIGNMENT_DELAY 1'd0;
	axi_to_jtag_received_data <= `BSV_ASSIGNMENT_DELAY 1'd0;
	axi_to_jtag_write_id <= `BSV_ASSIGNMENT_DELAY 12'd0;
      end
    else
      begin
        if (axi_to_jtag_address$EN)
	  axi_to_jtag_address <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_address$D_IN;
	if (axi_to_jtag_data$EN)
	  axi_to_jtag_data <= `BSV_ASSIGNMENT_DELAY axi_to_jtag_data$D_IN;
	if (axi_to_jtag_internal_jtag_tap_access_dm$EN)
	  axi_to_jtag_internal_jtag_tap_access_dm <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_access_dm$D_IN;
	if (axi_to_jtag_internal_jtag_tap_dm_address$EN)
	  axi_to_jtag_internal_jtag_tap_dm_address <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_dm_address$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_to_read$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_to_read <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_to_read$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdo$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdo <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdo$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_trst$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_trst <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_trst$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_reset_counter$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_reset_counter <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_reset_counter$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state$EN)
	  axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state$D_IN;
	if (axi_to_jtag_internal_jtag_tap_internal_slave_select$EN)
	  axi_to_jtag_internal_jtag_tap_internal_slave_select <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_internal_slave_select$D_IN;
	if (axi_to_jtag_internal_jtag_tap_is_read_request$EN)
	  axi_to_jtag_internal_jtag_tap_is_read_request <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_is_read_request$D_IN;
	if (axi_to_jtag_internal_jtag_tap_read_dmi_reg$EN)
	  axi_to_jtag_internal_jtag_tap_read_dmi_reg <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_read_dmi_reg$D_IN;
	if (axi_to_jtag_internal_jtag_tap_register_width$EN)
	  axi_to_jtag_internal_jtag_tap_register_width <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_register_width$D_IN;
	if (axi_to_jtag_internal_jtag_tap_started_read_request$EN)
	  axi_to_jtag_internal_jtag_tap_started_read_request <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_started_read_request$D_IN;
	if (axi_to_jtag_internal_jtag_tap_started_write_request$EN)
	  axi_to_jtag_internal_jtag_tap_started_write_request <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_started_write_request$D_IN;
	if (axi_to_jtag_internal_jtag_tap_write_dmi_reg$EN)
	  axi_to_jtag_internal_jtag_tap_write_dmi_reg <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_jtag_tap_write_dmi_reg$D_IN;
	if (axi_to_jtag_internal_s_read_in_rv$EN)
	  axi_to_jtag_internal_s_read_in_rv <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_s_read_in_rv$D_IN;
	if (axi_to_jtag_internal_s_read_out_rv$EN)
	  axi_to_jtag_internal_s_read_out_rv <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_s_read_out_rv$D_IN;
	if (axi_to_jtag_internal_s_write_in_addr_rv$EN)
	  axi_to_jtag_internal_s_write_in_addr_rv <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_s_write_in_addr_rv$D_IN;
	if (axi_to_jtag_internal_s_write_in_data_rv$EN)
	  axi_to_jtag_internal_s_write_in_data_rv <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_s_write_in_data_rv$D_IN;
	if (axi_to_jtag_internal_s_write_out_rv$EN)
	  axi_to_jtag_internal_s_write_out_rv <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_internal_s_write_out_rv$D_IN;
	if (axi_to_jtag_read_id$EN)
	  axi_to_jtag_read_id <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_read_id$D_IN;
	if (axi_to_jtag_received_addr$EN)
	  axi_to_jtag_received_addr <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_received_addr$D_IN;
	if (axi_to_jtag_received_data$EN)
	  axi_to_jtag_received_data <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_received_data$D_IN;
	if (axi_to_jtag_write_id$EN)
	  axi_to_jtag_write_id <= `BSV_ASSIGNMENT_DELAY
	      axi_to_jtag_write_id$D_IN;
      end
  end

  always@(posedge ACLK or `BSV_RESET_EDGE ARESETN)
  if (ARESETN == `BSV_RESET_VALUE)
    begin
      axi_to_jtag_internal_s_read_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	  1'd1;
      axi_to_jtag_internal_s_write_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	  1'd1;
    end
  else
    begin
      if (axi_to_jtag_internal_s_read_isRst_isInReset$EN)
	axi_to_jtag_internal_s_read_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	    axi_to_jtag_internal_s_read_isRst_isInReset$D_IN;
      if (axi_to_jtag_internal_s_write_isRst_isInReset$EN)
	axi_to_jtag_internal_s_write_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	    axi_to_jtag_internal_s_write_isRst_isInReset$D_IN;
    end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    axi_to_jtag_address = 32'hAAAAAAAA;
    axi_to_jtag_data = 32'hAAAAAAAA;
    axi_to_jtag_internal_jtag_tap_access_dm = 1'h0;
    axi_to_jtag_internal_jtag_tap_dm_address = 7'h2A;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_read = 8'hAA;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_bits_to_read = 8'hAA;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_desired_tap_state =
	4'hA;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_finished_access = 1'h0;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_clk = 1'h0;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdi = 1'h0;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tdo = 1'h0;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_tms = 1'h0;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_internal_trst = 1'h0;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_main_state = 3'h2;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_reset_counter = 8'hAA;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_response_ready = 1'h0;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_return_value =
	64'hAAAAAAAAAAAAAAAA;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_shift_state = 3'h2;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_start_access = 1'h0;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_change_state =
	4'hA;
    axi_to_jtag_internal_jtag_tap_internal_jtag_master_tap_state = 4'hA;
    axi_to_jtag_internal_jtag_tap_internal_slave_select = 2'h2;
    axi_to_jtag_internal_jtag_tap_is_read_request = 1'h0;
    axi_to_jtag_internal_jtag_tap_read_dmi_reg = 1'h0;
    axi_to_jtag_internal_jtag_tap_register_width = 8'hAA;
    axi_to_jtag_internal_jtag_tap_started_read_request = 1'h0;
    axi_to_jtag_internal_jtag_tap_started_write_request = 1'h0;
    axi_to_jtag_internal_jtag_tap_write_dmi_reg = 1'h0;
    axi_to_jtag_internal_s_read_in_rv = 74'h2AAAAAAAAAAAAAAAAAA;
    axi_to_jtag_internal_s_read_isRst_isInReset = 1'h0;
    axi_to_jtag_internal_s_read_out_rv = 48'hAAAAAAAAAAAA;
    axi_to_jtag_internal_s_write_in_addr_rv = 74'h2AAAAAAAAAAAAAAAAAA;
    axi_to_jtag_internal_s_write_in_data_rv = 38'h2AAAAAAAAA;
    axi_to_jtag_internal_s_write_isRst_isInReset = 1'h0;
    axi_to_jtag_internal_s_write_out_rv = 15'h2AAA;
    axi_to_jtag_read_id = 12'hAAA;
    axi_to_jtag_received_addr = 1'h0;
    axi_to_jtag_received_data = 1'h0;
    axi_to_jtag_write_id = 12'hAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkAXI_to_JTAG

